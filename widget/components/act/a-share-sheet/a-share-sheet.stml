<template>
  {this.$model.show &&
  <a-popup $show="show" round position="bottom" @close="onClose">
    <view @click="onBlock">
      <view class="a-share-sheet-header">
        <text v-if={this.props.title} class="a-share-sheet-header-title">{this.props.title}</text>
        <text v-if={this.props.description} class="a-share-sheet-header-desc">{this.props.description}</text>
      </view>
      <scroll-view v-for="(option,i) in options" class={"a-share-sheet-options"+(i>0?' a-share-sheet-options-border':'')} scroll-x always-bounces={false} show-scrollbar={false}>
        <view v-for="(item,j) in option" class="a-share-sheet-option" data-option={item} @click="onSelect">
          <image src={this.getIconURL(item.icon)} class="a-share-sheet-icon" policy="cache_only" />
          <text v-if={item.name} class="a-share-sheet-name">{item.name}</text>
          <text v-if={item.description} class="a-share-sheet-option-description">{item.description}</text>
        </view>
      </scroll-view>
      <button class="a-share-sheet-cancel" @click="onCancel">取消</button>
      <view v-if={!('safe-area-inset-bottom' in this.props) || this.props['safe-area-inset-bottom']} style={`height:${api.safeArea.bottom}px;`}></view>
    </view>
  </a-popup>
  }
</template>

<script>

import '../a-popup'
import {syncModel} from "../utils/index";

const PRESET_ICONS = [
  'qq',
  'link',
  'weibo',
  'wechat',
  'poster',
  'qrcode',
  'weapp-qrcode',
];

export default {
  name: "a-share-sheet",
  data() {
    return {
      show: true
    }
  },
  computed: {
    options() {
      const {options} = this.props;
      if (Array.isArray(options) && Array.isArray(options[0])) {
        return options;
      }
      return [options];
    }
  },
  methods:{
    onCancel() {
      this.data.show = false;
      this.$model.show = false;
    },
    onSelect(e) {
      let detail = {option:e.currentTarget.dataset.option};
      this.fire('select', detail);
      this.onCancel();
    },
    onClose() {
      this.fire('click-overlay', {});
      if ('close-on-click-overlay' in this.props && !this.props['close-on-click-overlay']) {
        return;
      }
      this.onCancel();
    },
    onBlock(e) {
      e.stopPropagation && e.stopPropagation();
    },
    getIconURL(icon) {
      if (PRESET_ICONS.indexOf(icon) !== -1) {
        return `https://docs.apicloud.com/act/img/share-icon-${icon}.png`;
      }
      return icon;
    }
  },
  beforeRender(){
    this.data.show = true;
    if (!this.$model) {
      syncModel.call(this);
    }
  }
}
</script>

<style scoped>
.a-share-sheet {
  z-index: 99;
  width: 200px;
  height: 100px;
  background: red;
}
.a-share-sheet-header {
  padding: 12px 16px 4px;
}
.a-share-sheet-header-title {
  margin-top: 8px;
  color: #323233;
  text-align: center;
  font-weight: normal;
  font-size: 14px;
  line-height: 20px;
}
.a-share-sheet-header-desc {
  margin-top: 8px;
  color: #969799;
  text-align: center;
  font-size: 12px;
  line-height: 16px;
}
.a-share-sheet-options {
  padding: 16px 0 16px 8px;
}
.a-share-sheet-options-border {
  border-top: 0.5px solid #ebedf0;
}
.a-share-sheet-option {
  display: inline-flex;
  align-items: center;
}
.a-share-sheet-icon {
  width: 48px;
  height: 48px;
  margin: 0 16px;
}
.a-share-sheet-name {
  margin-top: 8px;
  padding: 0 4px;
  color: #646566;
  font-size: 12px;
}
.a-share-sheet-option-description {
  padding: 0 4px;
  color: #c8c9cc;
  font-size: 12px;
}
.a-share-sheet-cancel {
  width: 100%;
  padding: 0;
  font-size: 16px;
  line-height: 48px;
  text-align: center;
  background: white;
  border: none;
  border-top: 8px solid #f7f8fa;
}
</style>