<script>

import {parseFormat, parseTime, slotSupport} from "../utils";

export default {
  timer: null,
  name: "a-count-down",
  data() {
    return {
      time: 0
    }
  },
  install() {
    this.render = props => {
      const {h} = apivm;

      return slotSupport(h('view', {
            class: `a-count-down ${props.class || ''}`,
            style: `${props.style || ''}`,
            _slot: 'default'
          },
          h('text', {
                class: 'a-count-down__text'
              },
              this.timeStr
          ))
          , props.children, this
      );
    }
  },
  installed() {
    this.data.time = this.props.time || 0;
    if (this.props['auto-start'] !== false) {
      this.start();
    }
  },

  computed: {
    timeStr() {
      const format = this.props.format || 'HH:mm:ss';
      return parseFormat(format, this.timeData);
    },
    timeData() {
      return parseTime(this.data.time)
    }
  },

  methods: {
    start() {
      if (this.timer || this.data.time === 0) return;
      const step = this.props.millisecond ? 1 : 1000;

      const _run = () => {
        this.data.time -= step;
        if (this.data.time) {
          this.timer = setTimeout(_run, step);
          this.fire('change', this.timeData);
        } else {
          this.pause();
          this.fire('finish');
        }
      }

      _run();

    },
    pause() {
      clearTimeout(this.timer);
      this.timer = false;
    },
    reset() {
      this.pause();
      this.data.time = this.props.time || 0;
    }
  }
}
</script>

<style scoped>
.a-count-down {
  flex-flow: row nowrap;
}
</style>