<template name="simple-cell">
  <view class="page">
    <a-nav-bar title="simple-cell" left-arrow/>
    <scroll-view style="flex: 1;" scroll-y>

      <view class="simple">
        <text class="simple-title">基础用法</text>
        <text class="simple-desc">
          Cell 可以单独使用，也可以与 CellGroup 搭配使用，CellGroup 可以为 Cell 提供上下外边框。
        </text>

        <a-cell-group>
          <a-cell title="单元格" value="内容" @click="showParam('Vue风格传参')"/>
          <a-cell title="单元格" value="内容" label="描述信息" onClick={()=>this.showParam('React风格传参')}/>
        </a-cell-group>

      </view>


      <view class="simple">
        <text class="simple-title">单元格大小</text>
        <text class="simple-desc">
          通过 size 属性可以控制单元格的大小。
        </text>

        <a-cell-group>
          <a-cell title="单元格" value="内容" size="large"/>
          <a-cell title="单元格" value="内容" size="large" label="描述信息"/>
        </a-cell-group>

      </view>


      <view class="simple">
        <text class="simple-title">展示图标</text>
        <text class="simple-desc">
          通过 icon 属性在标题左侧展示图标。
        </text>

        <a-cell-group>
          <a-cell title="单元格" icon="map"/>
        </a-cell-group>
      </view>

      <view class="simple">
        <text class="simple-title">快捷标题</text>
        <text class="simple-desc">
          子节点是纯文本的时候被理解成title
        </text>
        <a-cell>单元格</a-cell>
      </view>


      <view class="simple">
        <text class="simple-title">展示箭头</text>
        <text class="simple-desc">
          设置 is-link 属性后会在单元格右侧显示箭头，并且可以通过 arrow-direction 属性控制箭头方向。
        </text>

        <a-cell-group>
          <a-cell title="单元格" is-link/>
          <a-cell title="单元格" is-link value="内容"/>
          <a-cell title="单元格" is-link arrow-direction="down" value="内容"/>
        </a-cell-group>
      </view>

      <view class="simple">
        <text class="simple-title">页面导航</text>
        <text class="simple-desc">
          可以通过 url 属性进行 URL 跳转，或通过 to 属性进行路由跳转。
        </text>

        <a-cell-group>
          <a-cell title="URL 跳转" is-link url="../simple-button/simple-button"/>
          <a-cell title="路由跳转" is-link to="simple-button"/>
        </a-cell-group>
      </view>


      <view class="simple">
        <text class="simple-title">分组标题</text>
        <text class="simple-desc">
          通过 CellGroup 的 title 属性可以指定分组标题。
        </text>

        <a-cell-group title="分组1">
          <a-cell title="单元格" value="内容"/>
        </a-cell-group>
        <a-cell-group title="分组2">
          <a-cell title="单元格" value="内容"/>
        </a-cell-group>
      </view>


      <view class="simple">
        <text class="simple-title">分组圆角</text>
        <text class="simple-desc">
          通过 round 属性让一个 cell-group 组变成圆角。
        </text>

        <a-cell-group round>
          <a-cell title="单元格"/>
        </a-cell-group>
      </view>

      <view class="simple">
        <text class="simple-title">使用插槽</text>
        <text class="simple-desc">
          如以上用法不能满足你的需求，可以使用插槽来自定义内容。
        </text>

        <a-cell-group>
          <a-cell value="内容" is-link>
            <!-- 使用 title 插槽来自定义标题 -->
            <template _slot="title">
              <text class="custom-title">自定义标题</text>
              <a-tag type="danger">标签</a-tag>
            </template>
          </a-cell>

          <a-cell title="相机扫码" icon="camera">
            <!-- 使用 right-icon 插槽来自定义右侧图标 -->
            <template _slot="right-icon">
              <a-icon name="scanning" class="search-icon"/>
            </template>
          </a-cell>
        </a-cell-group>
      </view>


      <view class="simple">
        <text class="simple-title">垂直居中</text>
        <text class="simple-desc">
          通过 center 属性可以让 Cell 的左右内容都垂直居中。
        </text>

        <a-cell center title="单元格" value="内容" label="描述信息"/>
      </view>

    </scroll-view>
  </view>
</template>

<script>
import {ANavBar, ACell, ATag, ACellGroup} from "../../components/act";

export default {
  name: "simple-cell",
  components: {ATag, ACell, ACellGroup, ANavBar},
  methods:{
    showParam(msg){
      console.log(msg)
    }
  }
}
</script>

<style scoped>
.page {
  flex: 1;
  background: #F8F8F8;
}

.simple {
  padding-bottom: 28px;
}

.simple-title {
  margin: 16px;
  font-weight: 600;
  font-size: 18px;
}

.simple-desc {
  color: #999;
  font-size: 14px;
  margin: 0 16px 16px;
}


.custom-title {
  font-size: 14px;
  color: #fa8919;
}
</style>